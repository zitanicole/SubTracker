@model SubTracker.capstone_Kellogg.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home";
}

<!--debug-->
@if (Model.SelectedAccount != null)
{
    <p>Selected Account: @Model.SelectedAccount.AccountName (ID: @Model.SelectedAccount.AccountId)</p>
}
else
{
    <p>No account selected.</p>
}







<div class="text-center">
    <h1 class="display-4">Welcome to SubTracker</h1>
    <p class="lead">Select an account to view your statement</p>

    <!-- Create New Account -->
    <div class="mb-4">
        <a class="btn btn-success" asp-controller="Accounts" asp-action="Create">Create New Account</a>
    </div>


     <!-- Select Account -->
<form method="get" asp-action="Index" asp-controller="Home">
    <div class="form-group">
        @{
            int.TryParse(Context.Request.Query["accountId"], out var selectedId);
        }
        <select class="form-control" id="accountId" name="accountId" onchange="this.form.submit();">
            <option value="">-- Choose an Account --</option>
            @foreach (var account in Model.Accounts)
            {
                var isSelected = selectedId == account.AccountId ? "selected=\"selected\"" : "";
                @:<option value="@account.AccountId" @Html.Raw(isSelected)>@account.AccountName</option>
            }
        </select>
    </div>
</form>




    <!-- Statement -->
    @if (Model.SelectedAccount != null)
    {
        <hr />
            <div class="mb-3">
        <a class="btn btn-primary" asp-controller="Transactions" asp-action="Create" asp-route-accountId="@Model.SelectedAccount.AccountId">
            Add Transaction
        </a>
        <a class="btn btn-secondary" asp-controller="Autopayments" asp-action="Create" asp-route-accountId="@Model.SelectedAccount.AccountId">
            Add Autopayment
        </a>
    </div>
        <h3>Account Balance: @Model.SelectedAccount.Balance.ToString("C")</h3>

        <h4>Recent Transactions</h4>
        @if (Model.Transactions.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Description</th>
                        <th>Type</th>
                        <th>Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tx in Model.Transactions.OrderByDescending(t => t.Date))
                    {
                        <tr>
                            <td>@tx.Date.ToShortDateString()</td>
                            <td>@tx.Description</td>
                            <td>@tx.Type</td>
                            <td>@tx.Amount.ToString("C")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No transactions available for this account.</p>
        }
    }
</div>
